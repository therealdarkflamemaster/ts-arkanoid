{"version":3,"sources":["view/CanvasView.ts","sprites/Ball.ts","sprites/Paddle.ts","Collison.ts","setup.ts","sprites/Brick.ts","helpers.ts","index.ts"],"names":[],"mappings":";;AOAA;;AACA;;AAEA;AJGA,AGNA,AFAA,AHEA,AIAA,AHAA,AFIA,IGAA,AFJA,AIAA,AHAA,AFIA,ICJA,CIAA,CHAA,ECIA,EHAA;AGAA,AIFA,ANFA,AIAA,AHAA,AFIA;AGAA,AGLA,AFAA,AHCA,AIAA,AHAA,AFIA,YGAA,AFJA,AIAA,AHAA,AFIA;AGAA,AIAA,ANCI,AIFA,AHEA,AFOA,WGRJ,AFCI,AIFA,AHEA,AFOA,ICPA,CACI,AIHJ,CACY,AHCZ,CACY,CCFhB,EFCI,ADOA,CGRJ,AHQgB,CG4Cf,AFjDe,ACFZ,EAEY,EGJZ,EAEY,EJAZ,CDOA,CCJY,CDImB,EEP/B,EAGY,EGLZ,CJEA,CICY,CJGR,KAJJ,EAIkB,AINlB,AHEA,EGEY,AHEA,QAJZ,EAKI,CGPJ,EAKI,EHHJ,EAKkB,CGPlB,EAKkB;ADRtB,AHOgB,AIHA,AHCZ,AFQI,QERJ,CDEY,AIHA,ALSH,IERT,EFQI,CERJ,CDEY,CDMM,CKTN,CJGA,ACFZ,EGDY,ILSc,CAAC,CCNf,IIHA,QLSM,CAAuB,UAAvB,CAAd;AGNJ,AIFJ,ANGgB,AIHA,ALSR,EGPJ,OFCY,AIHA,ALSH,CGPT,CAAA,KHOI,CCNQ,EDMO,CGPnB,AFCY,AIHA,CFEZ,EEFY,CLSY,ICNZ,EDMO,CAAY,GKTnB,GFEZ,GAAA,CHOmB,CAAuB,IAAvB,CAAf,GGPa,IAAjB,EAA8B,KAA9B,EAA2C;AACvC,ACPR,AHCY,AIII,AHAA,AFSR,QGNI,CFPA,AIII,AHAA,AFSH,GGNG,CAAC,CDHD,ECGJ,CAAS,AEHL,AHAA,CCGJ,AFPA,EIII,CFGS,AFPkB,ADanC,CETQ,EFSY,CCbmB,CEOjB,CAAC,CEHf,EFGS,AFPkB,CEOR,CAAV,AFPb,ADawB,CAAC,EGNE,KAAK,CAAC,KAAjC,AHMgB,CAAuB,GGLvC,IAAI,CAAC,AHKW,CAApB,EGLI,CAAS,CAAT,GAAa,IAAI,CAAC,KAAlB,GAA0B,KAAK,CAAC,GAAN,CAAU,CADpC,IAEA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,KAAK,CAAC,GAAN,CAAU,CAAV,GAAc,KAAK,CAAC,MAFjC,IAGA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,IAAI,CAAC,MAAlB,GAA2B,KAAK,CAAC,GAAN,CAAU,CAJzC,EAKE;AACE,AIPZ,ANIQ,AIJQ,AHAA,AFSR,SCLK,AIJG,AHAA,AFSH,IGFM,CHEX,GGFI,AFHJ,ADKa,GCLG,AIJR,AHAA,GGAA,AHAA,EFSa,CAAC,ECLtB,MIJQ,AHAA,KFSK,CAAuB,QAAvB,CAAb;AGDC,ACbT,AHUQ,AIXI,AHOI,AFSR,SCLK,AIXD,AHOI,AFSH,IAAL,GAAY,CCLZ,EIXI,CJWY,CCJR,CGP4B,EHO5B,AFSY,CAAC,CKhBmB,EJWxC,EACA,CIZoC,EAAhC,EJYC,CCLG,EFSI,CAAuB,CCJnC,GAAa,GDID,CAAZ;AOCR,ANJY,AIJJ,AHDQ,AFSX,MCJO,CAAC,EAAG,AIJH,AHDG,KDIK,GCJL,EGCR,CHDQ,EGCU,MHDV,IGCR;AFMA,AFDI,AIJJ,AHVI,MDcA,CAAC,EAAG,AIJH,AHVD,CDcK,CECF,KAAP,IELA,AHVI,GGUe,AHVkB,IAAI,KAAJ,EGUrC,AHVI,CASU,CA6ClB;ACtCC,AFJgB,AIDb,ALSJ,EAAA,CGdA,CAHJ,CAeI,AFPI,IIAK,GLST,CAAA,IKTI,GAAgB,ELSpB,CAAA,KKTI,ALSJ,GAAA,YAAA;AIjBJ,AHaQ,AIJA,AH2CJ,SDvCS,AIJA,AH2CT,SDvCI,CAAe,CIJf,AH2CJ,EDvCI,CIJmB,AH2CT,EDvCW,KAArB,GCuCW,CG3CX,AH2CU,EAAkB;AKrDpC,AHEA,AHaK,AIJG,AH2CA,SG3CK,CH2CD,CAAC,CAAC,IAAF,GG3CJ,CAAgB,CH2CD,EG3Cf,GAAsB,KAAtB,CH2CI,IAA0B,CAAC,CAAC,GAAF,KAAU,WAAxC,EAAqD,KAAI,CAAC,QAAL,GAAgB,KAAhB;ACrCzD,AIdJ,AHAA,ACSK,AH2CG,AFpCA,EGFJ,ECdE,CJgBE,EAAA,GGFJ,ACdQ,AFoDA,AFpCJ,CGFJ,ADsCS,CAAC,CEpD2B,EJgB5B,CEoCD,ICtCR,CAAA,ACd6C,AFoD1B,CEpD2B,AJgB1C,MAAY,IAAZ,CEoCI,EEpD6B,CAAuB,AJgB5C,CEoCmB,CCtCnC,ADsCoC,AFpCpB,CEoCqB,ECtCrC,CDsCmC,CFpCnB,IEoC6B,CEpDR,AJgBrB,CIhBpB,AJgBQ,EGFc,ACZtB,CJcoB,GGFhB,EAA+B,AHEf,CAAZ,CEoCA,EAAuD,AFpC3C,EGFhB,AHEgB,CAAE,CGF6B,CDsCgB,CAAC,MFpChD,CAAY,CAAZ,CEoC2C,CFpC7B,CAAd,CEoC4D,CFpC5C,IEoC2B,CFpCtB,MAAL,CAAY,KAA5B,EAAkC,KAAK,MAAL,CAAY,MAA9C,CAAZ;AGFJ,AIHJ,ANII,ACsCC,AFpCA,ECFD,CDAA,EEmCA,GCpCA,AFCA,CAAA,IEDA,GAAA,IAAA,GFCA,CAAI,IAAA,CAAA,SAAJ,EAAI,OAAJ,EAAS;AMDb,AHXO,AHWH,AIFA,EAAA,EEEA,AHXS,ICST,CAAA,GEEQ,GAAG,EHXW,GGW1B,AHX6B,EAAtB,CCSH,CAAI,KAAA,CAAA,SAAJ,EAAI,OAAJ,EAAS;AFGL,AIAR,AFJI,AH4CA,AFpCA,EAAA,EOJA,IJAQ,CIAH,ANAL,ACwCA,GKxCQ,APIR,COJJ,APII,IGJiB,GAAG,EDwCpB,AFpCA,CAAA,CCJA,CEAI,ADwCY,UAAC,CAAD,EAAkB,AFpClC,GAAA,UAAiB,aAAjB,EAA0D;AGFtD,AGZF,AFDC,AHYC,ACwCA,AFrCJ,IGFI,ACbK,IJeT,CMdY,ADOZ,CFKU,ADuCF,CCvCG,ADuCF,CAAC,CDxCC,ADGX,CIfmB,EFoDX,AFrCR,CIfsB,CDalB,AFDY,CECG,ACbhB,CJeH,CMdE,AJmDiB,GInDK,ADOxB,EJII,GECgB,GDuCZ,ECvCW,EAAO,ADuCQ,CCvCf,ADuCgB,CAAC,CCvCT,EDuCO,KAAU,WAAxC,EAAqD,KAAI,CAAC,QAAL,GAAgB,IAAhB;ACtCjD,AGZR,ACWJ,ANAK,AIJG,AH4CA,KD1CK,IKTF,ACWF,CJCQ,ADuCL,CAAC,CAAC,CG5CC,EFKM,CAAC,ADuCV,EG5CQ,EEIpB,CAAqB,ALwCE,CInDN,GCWjB,EAAsC,CDX3B,ADOH,CCPgB,GHYP,CAAsB,ADuC3B,ICvCK,ADuCsB,CAAC,CCvCK,AGZpB,AJmDgB,GInDjB,AJmDe,ECvCtB,AGZa,CHYlB,EAAyC,ADuCJ,IInDzB,EAAe,CAAf,EAAgB,GJmDhC,EAAuD,KAAI,CAAC,SAAL,GAAiB,IAAjB;ACtC/C,AGZR,ACWJ,AHbG,ACSF,AH4CA,EKxCD,EHbS,CCOA,AH2CT,CKrCI,CAAC,CJCO,AGZF,GAAG,CHYG,CAAC,CGZD,AFFG,CGanB,CAAc,CHbQ,CEEF,CAAC,AFFlB,EHUM,GKRO,CAAW,CAAC,GHYhB,AGZmB,ACW/B,CDXgB,IAAmB,iBAA/B;ACYJ,EAAA,QAAQ,GAAG,KAAX,GFPS;AFQG,AGZR,ACYP,AHdM,AHSM,ACTL,AFcA,GCLJ,CGTS,CJcL,EAAA,CMZM,CJFD,CFcL,CMZS,CHYE,EGZC,AJFZ,CIEa,ANYR,EGAW,ACdE,AFAL,CCcI,AGZD,EFFK,AJcrB,CIdD,CFAC,ECcW,EHAD,GGAkB,CAApB,AHAR,EGA+B,EHArB,CMZV,CNYU,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAU,EAAA,CAAE,gBAAF,CAAmB,OAAnB,EAA4B,YAAA;AGC1B,AGXZ,ALSJ,AIPS,AHLL,AFa0C,ECD9C,CIPA,KCFU,ALSV,CKTW,ALSX,ACZS,CCcO,EGXF,CNUgC,GGCxB,CAAC,GDdnB,GCcY,AFFhB,ACZuB,CCcO,AFF1B,CEEY,CHD2C,CGC3B,AHD4B,CGC5C,AFFZ,CAAA,GDCuD,CAAb,CEb1C,CIG0B,GAAG,ALSjC,EAAI,EKTiC,MLSrC,EAAU,aKTyC,oBAAlB,CAA7B;AHYS,AGXT,ACWR,AHfO,ACSH,AHRI,AFY6D,EKJjE,EDTS,CJaK,CAAV,EMTM,ADKV,CFIY,AGTD,ACWN,ANHL,AIHA,AHRS,GIGK,GHWI,ACfE,GAAG,CGe3B,CAAoB,CLdZ,EGQJ,CEMJ,AHfiC,AHY7B,AIHI,AHRoB,EKcS,CHdjC,ECQI,CAAA,CDRA,CAAC,GEGyB,CJH1B,CEAJ,CEGiC,AFHtB,CAAC,ACQZ,EAAI,CCLiC,GFHnB,CAAC,GCQnB,EDRY,ACQF,GDRiB,UEGyB,GFHZ,GAAG,CAAhC,IAAqC,SEGf,CAA7B,AFHJ,IAA8D,aADjC,GAE7B,GAFG;ADgBa,AGVZ,ACUJ,ANHI,ACXA,AFYH,EOED,CPJA,GOII,CAAC,CDVG,CDGR,AHPS,CCcO,GFHL,EEGU,AGVN,ACUf,CJAsB,AIAR,CLdV,CDWY,EKPI,AJJA,CIIhB,CHUY,CGVO,CDGvB,EFOgC,AFH5B,CEGY,CIAhB,ALdI,EII0B,GAAP;AHWV,AGTT,ACSJ,AHdG,AHWF,AIJG,AHPA,EKcJ,EHdS,CHSC,ICTD,CKcD,CDTJ,ECSO,AFPA,GDPU,CFAjB,CKcJ,AFPgB,CDPQ,CFAJ,KIKhB,AFL0B,AFA1B,CIMO,EFLX,CEII,ADEA,ECDU,CACN,AFNJ,CAAC,GEMO,EFNZ,CAAW,CAAC,MAAM,CAAC,CEMX,CACI,IFPA,GAAgB,WEMpB,EAEI,AFR6B,GAAG,CAAjC,IAAsC,UAAjD,CEMQ,EAGI,CFTmD,aADjC,GAE9B,EAFG;AEUW,ACKjB,AFPI,AHPG,AFYJ,EAAA,GKPU,CCII,CAAC,EAAA,AJTN,CISG,ENGZ,CAAA,KEZI,GDQM,ACRW,CFYrB,CAAA,GEZI,MFYJ,GAAA,UAAU,KAAV,EAAwB;AGEZ,AGLI,AFPb,AFDC,AFYA,IIXK,EEOO,CAAC,CHKL,AHDJ,CMJS,AJRR,IFYI,GIXQ,CDYA,ECZG,CDYA,ADbpB,CGIM,AHJW,CEClB,EDYS,ADbR,CFYA,EEZuB,AFYA,KEZvB,AFY4B,CEpBd,CAUd,UFUuB,CAAkB,SAAlB,GAA8B,KAAK,CAAC,QAAN,EAA9B;AGElB,AGNG,ACOhB,ANRc,ADMT,GCND,ADIA,EMNQ,EAII,ECMP,QAAT,CACI,IADJ,EAEI,GDRyB,GCM7B,EAGI,EDTY,CAJJ,EAKI,CCKhB,EAII,IAJJ,EAKI,SALJ,EDL6B,ACUL,ODVR,CALJ,CADM,CADV,CAAA;AHYC,AGFJ,ACUG,AHrBD,AHSH,AIPU,AHDN,EKoBA,ANZJ,CKjBO,ADUP,CDFS,AFCL,CCEA,AGQD,CCUK,CD7BD,AC6BE,CD7BT,ALiBA,CKlBwB,ALkBxB,CKEmB,ECUf,ALpBQ,CAAC,IEDS,GAAG,EAAtB,CHSH,CAAI,IAAA,CAAA,ACRA,CAA0B,QDQ9B,CCRI,CDQA,CCRqC,IDQzC,CCR8C,CDQvC,YCRH;ACaA,AGFP,ACUO,AFhBJ,AHJI,AFWJ,EOSI,AFhBJ,ALOA,EEXI,EKoBI,CAAC,CFhBT,CJGA,AIHA,EFQW,CDZC,AFWZ,CEXa,AFWb,IOSI,CAAgB,EJRhB,EHDJ,CKPA,ALOA,COSI,ANbJ,AIHI,KAAA,AHJA,CGIA,AHJ0B,CFW9B,GAAA,GEXI,EGIJ,AHJuC,EGInC,GHJwC,AFWnC,EKPT,EAAO,ALOP,EAAsB,KEXlB;ACaH,AIQG,AHtBD,AHSC,ACPH,AFWG,EOSA,CJvBJ,CCCS,EGsBD,CAAC,CPTD,CKRR,IJIW,ADIE,IOST,AHtBkB,AJalB,COSgB,ANbJ,CDIG,CIbM,GAAtB,CGsBC,AFjBJ,ALQwB,ECJpB,EDIe,CAAU,SAAV,GAAsB,IAAtB;AOUf,ANbH,AIJG,ALQH,EOSG,CPXJ,ECJO,CMeC,CAAC,MFjBE,IEiBP,CAAgB,AFjBJ,IEiBZ,EANgB,CAQhB,CFnBA;AFUJ,ACfG,ACMF,AHFD,ECWA,ADXA,EEJS,CCIF,GHAP,CAAA,CCWA,CAAA,KCfqB,GAAG,CDexB,CAAA,ACfG,AHOI,ECHP,CAAI,MAAA,CAAA,OCWJ,EDXA,CCWA,CDXI,OAAJ,ECWkB,ADXT,ICWT,EAA+B,MAA/B,EAAgD,IAAhD,EAAiE;AAC7D,AISA,ALtBJ,AFYA,EOUI,APVJ,IOUQ,CAAC,KPVT,CAAA,EOUI,GATgB,CAWhB,EFvBG,CLWP,CAAA,UAAA,GAAA,UAAW,KAAX,EAAwC;AGEpC,AChBD,AHMI,GAAP,CGNS,IDiBD,CDdR,GCcY,CAAC,CCjBM,EDiBX,CAAS,ACjBK,CDiBd,ACjBL,GDiBkB,GDdrB,CCcyB,CAAC,KAAlB,GAA0B,MAAM,CAAC,GAAP,CAAW,CAArC,IACA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,MAAM,CAAC,GAAP,CAAW,CAAX,GAAe,MAAM,CAAC,KADnC,IAEA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,IAAI,CAAC,MAAlB,KAA6B,MAAM,CAAC,GAAP,CAAW,CAH5C,CAG+C;AAH/C,AIWA,ANjBJ,AIPO,AHCH,EDMJ,CIPA,GFiBM,AIQG,ENlBT,CAAA,GMkBe,CAAC,ALxBL,KAAK,KDMhB,CAAI,EMkBK,ENlBL,CAAA,ACNA,CKwB6B,MAAM,CAAC,CNlBxC,EMkBiC,ANlB7B,CMkBwC,CAAX,GAAe,CAAxC,CNlBR,EAAS,CMmBA,MAAM,CAAC,cAAP,IAAyB,MAAM,CAAC,GAAP,CAAW,CAAX,GAAe,IAAI,CAAC,MAAL,CAAY,KAAZ,GAAoB,MAAM,CAAC,KAFxE,EAGE;AJTE,AIUA,AH9BL,ACMH,AHFC,AFUG,EKRJ,EEwBQ,AH9BC,CFEA,GCkBD,AEdR,ALQQ,CCLR,AIHA,ALQS,COgBK,CAAC,CJVH,CAAC,ACpBK,CJcd,EIdiB,AJcL,EIdb,GG8BK,EFxBR,CJGA,AIHI,KFcI,AEdJ,CAAA,SAAJ,EAAI,QAAJ,EAAU;AFeL,AIUA,ANrBD,ADMA,KAAA,EGH6D,AHG7D,CGMA,CEhBJ,CLUI,GCNO,EDMF,GCNO,GCRP,CFcL,EKVJ,GJII,CDMY,IAAZ,IAAY,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAY,EAAA,CAAE,SAAF,CACR,KAAK,CAAC,KADE,EAER,KAAK,CAAC,GAAN,CAAU,CAFF,EAGR,KAAK,CAAC,GAAN,CAAU,CAHF,EAIR,KAAK,CAAC,KAJE,EAKR,KAAK,CAAC,MALE,CAAZ;AGOA,ACtBD,AHUF,AIJG,ALgBH,GAVD,CIZS,CHQA,QIFE,EDNS,GAAG,ACMP,GDNb,QCMC;AE0BA,AFzBH,AHNQ,EK+BL,CL/BJ,EGIU,ME2BG,CAAC,SNxBL,QMwBL,CAA4B,IAA5B,EAAkC,MAAlC,EAA0C,IAA1C;AACA,AHhCD,ACaH,AHTA,AFmBA,EEnBA,AFmBA,EIvBS,EGgCC,EL5BV,CAAA,GFmBA,CAAA,EIvBoB,GAAG,EGgCC,CHhCrB,CJuBH,COS2B,AL5B3B,AFmBA,CEnBI,MAAA,CAAA,CK4BgC,CAAC,APTrC,GAAA,IEnBA,EAAI,IFmBO,IOSgB,AL5B3B,CK4BuD,CL5B7C,AFmBV,EAA2B,COSA,EAAkC,MAAlC,CAAvB;AJVA,AFfK,ADgBT,GChBA,EAjCJ,CAqCI,EEWS,AHCT,CKTA,AHVA,GCkBa,CAAC,AHCd,GGDS,AHCT,CGDkB,CAAT,EHCT,CGDsB,CERX,EHVX,CCkB0B,CAAC,EER3B,EAA0B,EFQJ,CAAY,KAAZ,GAAoB,IAAI,CAAC,KAAtC,IAA+C,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,CAAjE,EAAoE;AAChE,AIWJ,AHhCD,ACaC,AHVA,IEHK,EDqBD,AIWA,IJXI,CAAC,AERJ,EHVE,GEHU,EFGL,CEHmC,CGgC/C,EAAoB,AFnBpB,GAAmB,EFQf,GDlBJ,CGUA;AFSC,AIWG,AHhCV,AHUE,AIGC,AHVA,AFkBG,ECXJ,EMsBQ,APXJ,CGb6D,ACRhE,ACCS,AHAA,CCqBN,AFZJ,CAAA,EMsBa,CPXH,CAAC,EOWM,CAAT,ENtBR,CAAA,CDWI,CAAe,GItBgC,OJsBhC,ICXnB,CDWmB,ECXnB,ADWwB,YCXxB;AMuBQ,AHhCV,AHUM,ADWI,IOWA,CHhCP,CJqBO,EOWI,CAAC,ANtBJ,EDWG,CAAC,ECXT,CAAW,CAAX,EMsBI,CAAe,ANtBJ,CAAC,CIVV,AHAA,CFqBF,CAAgB,COWhB,AHlC2C,CHY1B,GDWjB,ECXY,CAAW,CAA3B;AMuBC,AHhCP,AHUG,ADWI,GOde,ANCpB,CM0BI,CHlCH,AJmBG,oBItB+C;ADwB/C,ACpBN,ACFY,AHAA,AFuBT,GKvBD,AHAA,AFmBA,EIjBC,GDoBQ,IAAI,CAAC,GAAL,CAAS,CAAT,GAAY,CAAjB,CCxB+C,CDwB1B;AACjB,ACpBV,AHUE,AITA,AHAA,EDSA,AITA,AHAA,GEDC,CDoBO,AFVR,CAAA,CITA,AHAA,CGAA,AHAA,CCmBY,CAAC,KFVb,CAAA,MITA,AHAA,CGAI,AHAA,GCmBI,EEnBJ,CAAA,AHAA,CAAA,EDSJ,GAAA,GITA,CHAA,CGAI,CHAA,KAAJ,CDSA,AITA,CHAO,CGAE;AFoBJ,AIYD,AHtC+C,AHgB/C,ADWR,CI3BO,KGsCI,GNtBE,AIVT,AHAA,AFqBJ,COWe,CAAC,GAAL,ANtBH,CMsBY,ANtBD,CMsBR,ANtBH,GMsBgB,ANtBD,ADWvB,CCXwB,GMsBI,CAAC,AFhCzB,AHAA,CDUyB,KMsBL,ANtBA,CMsBY,ANtBD,CAA3B,KMsBA,EAAoC,QAAQ,GAAG,IAAX,CA5BpB,CA6BhB;AJZH,AFVA,AIVG,AHAA,AF/BR,CAAA,EGiCI,AFMA,ADvCJ,UK+Be,AHAA,KGAK,AHAA,QAAZ,EGAA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","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["// Types\r\nimport {Brick} from '../sprites/Brick';\r\nimport {Ball} from '../sprites/Ball';\r\nimport {Paddle} from '../sprites/Paddle';\r\nimport { BRICK_IMAGES } from '~/setup';\r\n\r\nexport class CanvasView {\r\n\r\n    canvas : HTMLCanvasElement;\r\n    private context : CanvasRenderingContext2D | null;\r\n    private socreDisplay : HTMLObjectElement | null;\r\n    private start : HTMLObjectElement | null;\r\n    private info : HTMLObjectElement | null;\r\n\r\n    constructor(canvasName : string) {\r\n        this.canvas = document.querySelector(canvasName) as HTMLCanvasElement; \r\n        this.context = this.canvas.getContext('2d');\r\n        this.socreDisplay = document.querySelector('#score');\r\n        this.start = document.querySelector('#start');\r\n        this.info = document.querySelector('#info');\r\n    } \r\n\r\n\r\n    clear(): void {\r\n        this.context?.clearRect(0,0,this.canvas.width,this.canvas.height);\r\n    }\r\n\r\n    initStartButton( startFunction : (view:CanvasView) => void ) : void {\r\n        this.start?.addEventListener('click', ()=>startFunction(this));\r\n    }\r\n\r\n    drawSocre(score : number) : void {\r\n        if (this.socreDisplay) this.socreDisplay.innerHTML = score.toString();\r\n    }\r\n\r\n    drawInfo(text : string) : void {\r\n        if (this.info) this.info.innerHTML = text;\r\n    }\r\n\r\n    drawSprite(brick : Brick | Paddle | Ball) : void {\r\n        if (!brick) return;\r\n        \r\n        this.context?.drawImage(\r\n            brick.image,\r\n            brick.pos.x,\r\n            brick.pos.y,\r\n            brick.width,\r\n            brick.height\r\n        );\r\n    }\r\n\r\n    drawBricks(bricks : Brick[]) : void {\r\n        bricks.forEach(brick => {\r\n            this.drawSprite(brick);\r\n        });\r\n    }\r\n\r\n}","import {Vector} from '../types';\r\n\r\nexport class Ball {\r\n    private speed : Vector;\r\n    private ballImage : HTMLImageElement = new Image();\r\n\r\n\r\n    constructor(\r\n        speed : number,\r\n        private ballSize : number,\r\n        private position : Vector,\r\n        image : string,\r\n    ) {\r\n        this.ballSize = ballSize;\r\n        this.position = position,\r\n        this.speed = {\r\n            x : speed,\r\n            y : -speed\r\n        };\r\n        this.ballImage.src = image;\r\n    }\r\n\r\n    // Getters\r\n    get width() : number {\r\n        return this.ballSize;\r\n    }\r\n\r\n    get height() : number {\r\n        return this.ballSize;\r\n    }\r\n\r\n    get pos() : Vector {\r\n        return this.position;\r\n    }\r\n\r\n    get image() : HTMLImageElement {\r\n        return this.ballImage;\r\n    }\r\n\r\n    // Methods\r\n\r\n    changeYDirection() : void {\r\n        this.speed.y = -this.speed.y;\r\n    }\r\n\r\n    changeXDirection() : void {\r\n        this.speed.x = -this.speed.x;\r\n    }\r\n\r\n    moveBall() : void {\r\n        this.pos.x += this.speed.x;\r\n        this.pos.y += this.speed.y;\r\n    }\r\n\r\n}","import {Vector} from '../types';\r\n\r\nexport class Paddle {\r\n    private paddleImage : HTMLImageElement = new Image();\r\n    private moveLeft : boolean;\r\n    private moveRight : boolean;\r\n\r\n    constructor(\r\n        private speed : number,\r\n        private paddleWidth : number,\r\n        private paddleHeight : number,\r\n        private position : Vector,\r\n        image : string\r\n    ) {\r\n        this.speed = speed;\r\n        this.paddleWidth = paddleWidth;\r\n        this.paddleHeight = paddleHeight;\r\n        this.position = position;\r\n        this.moveLeft = false;\r\n        this.moveRight = false;\r\n        this.paddleImage.src = image;\r\n\r\n        // Event Listeners\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n        document.addEventListener('keyup', this.handleKeyUp);\r\n    }\r\n\r\n    // Getters\r\n    get width() : number {\r\n        return this.paddleWidth;\r\n    }\r\n\r\n    get height() : number {\r\n        return this.paddleHeight;\r\n    }\r\n\r\n    get pos() : Vector {\r\n        return this.position;\r\n    }\r\n\r\n    get image() : HTMLImageElement {\r\n        return this.paddleImage;\r\n    }\r\n\r\n    get isMoveingLeft() : boolean {\r\n        return this.moveLeft;\r\n    }\r\n\r\n    get isMoveingRight() : boolean {\r\n        return this.moveRight;\r\n    }\r\n\r\n    movePaddle() : void {\r\n        if(this.moveLeft) this.pos.x -= this.speed;\r\n        if(this.moveRight) this.pos.x += this.speed;\r\n    }\r\n\r\n    // use arrow function to avoid bind(this)\r\n    handleKeyUp = (e : KeyboardEvent) => {\r\n        if (e.code === \"ArrowLeft\" || e.key === \"ArrowLeft\") this.moveLeft = false;\r\n        if (e.code === \"ArrowRight\" || e.key === \"ArrowRight\") this.moveRight = false;\r\n    }\r\n\r\n    handleKeyDown = (e : KeyboardEvent) => {\r\n        if (e.code === \"ArrowLeft\" || e.key === \"ArrowLeft\") this.moveLeft = true;\r\n        if (e.code === \"ArrowRight\" || e.key === \"ArrowRight\") this.moveRight = true;\r\n    }\r\n\r\n}","// Types\r\nimport {Brick} from './sprites/Brick';\r\nimport {Ball} from './sprites/Ball';\r\nimport {Paddle} from './sprites/Paddle';\r\nimport { CanvasView } from './view/CanvasView';\r\n\r\nexport class Collison {\r\n\r\n\r\n    isCollidingBrick(ball : Ball, brick : Brick ) : boolean {\r\n        if (\r\n            ball.pos.x < brick.pos.x + brick.width &&\r\n            ball.pos.x + ball.width > brick.pos.x &&\r\n            ball.pos.y < brick.pos.y + brick.height &&\r\n            ball.pos.y + ball.height > brick.pos.y \r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // check ball collison with bricks\r\n    isCollidingBricks(ball : Ball, bricks : Brick[]) : boolean {\r\n        let colliding = false;\r\n\r\n        bricks.forEach((brick,i) => {\r\n            if ( this.isCollidingBrick(ball, brick)) {\r\n                ball.changeYDirection();\r\n                if(brick.energy === 1) {\r\n                    bricks.splice(i,1);\r\n                }else {\r\n                    brick.energy -= 1;\r\n                }\r\n                colliding = true;\r\n            }\r\n        })\r\n        return colliding;\r\n    }\r\n\r\n    checkBallCollison(ball : Ball, paddle : Paddle, view : CanvasView) : void {\r\n        // 1. check ball collison with paddle\r\n        if (\r\n            ball.pos.x + ball.width > paddle.pos.x &&\r\n            ball.pos.x < paddle.pos.x + paddle.width &&\r\n            ball.pos.y + ball.height === paddle.pos.y  // hit the corner\r\n        ) {\r\n            ball.changeYDirection();   \r\n        }\r\n        // 2. check ball collison with walls\r\n        // ball movement X constraintes\r\n        if ( ball.pos.x > view.canvas.width - ball.width || ball.pos.x < 0) {\r\n            ball.changeXDirection();\r\n        }\r\n        // Ball movement Y constarintes\r\n        if ( ball.pos.y <0 ) {\r\n            ball.changeYDirection();\r\n        }\r\n    }\r\n}","import RED_BRICK_IMAGE from './images/brick-red.png';\r\nimport BLUE_BRICK_IMAGE from './images/brick-blue.png';\r\nimport GREEN_BRICK_IMAGE from './images/brick-green.png';\r\nimport YELLOW_BRICK_IMAGE from './images/brick-yellow.png';\r\nimport PURPLE_BRICK_IMAGE from './images/brick-purple.png';\r\n\r\n// Grab the canvas element for calculating the brick width\r\n// depending on canvas width\r\nconst canvas: HTMLCanvasElement | null = document.querySelector('#playField');\r\n\r\n// Constants\r\nexport const STAGE_PADDING = 10;\r\nexport const STAGE_ROWS = 20;\r\nexport const STAGE_COLS = 10;\r\nexport const BRICK_PADDING = 5;\r\nexport const BRICK_WIDTH = canvas\r\n  ? Math.floor((canvas.width - STAGE_PADDING * 2) / STAGE_COLS) - BRICK_PADDING\r\n  : 100;\r\nexport const BRICK_HEIGHT = canvas\r\n  ? Math.floor((canvas.height - STAGE_PADDING * 2) / STAGE_ROWS) - BRICK_PADDING\r\n  : 30;\r\nexport const PADDLE_WIDTH = 150;\r\nexport const PADDLE_HEIGHT = 25;\r\nexport const PADDLE_STARTX = 450;\r\nexport const PADDLE_SPEED = 10;\r\nexport const BALL_SPEED = 2;\r\nexport const BALL_SIZE = 20;\r\nexport const BALL_STARTX = 500;\r\nexport const BALL_STARTY = 400;\r\n\r\nexport const BRICK_IMAGES: { [key: number]: string } = {\r\n  1: RED_BRICK_IMAGE,\r\n  2: GREEN_BRICK_IMAGE,\r\n  3: YELLOW_BRICK_IMAGE,\r\n  4: BLUE_BRICK_IMAGE,\r\n  5: PURPLE_BRICK_IMAGE\r\n};\r\n\r\nexport const BRICK_ENERGY: { [key: number]: number } = {\r\n  1: 1, // Red brick\r\n  2: 1, // Green brick\r\n  3: 2, // Yellow brick\r\n  4: 2, // Blue brick\r\n  5: 3 // Purple brick\r\n};\r\n\r\n// prettier-ignore\r\nexport const LEVEL = [\r\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n  0, 0, 1, 1, 1, 1, 1, 1, 0, 0,\r\n  0, 2, 2, 2, 2, 2, 2, 2, 2, 0,\r\n  0, 3, 3, 3, 3, 3, 3, 3, 3, 0,\r\n  0, 0, 4, 4, 4, 4, 4, 4, 0, 0, \r\n  0, 0, 5, 5, 0, 0, 5, 5, 0, 0,\r\n];\r\n","import {Vector} from '../types';\r\n\r\nexport class Brick {\r\n    private brickImage : HTMLImageElement = new Image();\r\n\r\n    constructor (\r\n        private brickWidth : number,\r\n        private brickHeight : number,\r\n        private position : Vector,\r\n        private brickEnergy : number,\r\n        image : string\r\n    ) {\r\n        this.brickWidth = brickWidth;\r\n        this.brickHeight = brickHeight;\r\n        this.position = position;\r\n        this.brickEnergy = brickEnergy;\r\n        this.brickImage.src = image;\r\n    }\r\n\r\n    // Getters\r\n    get width() : number {\r\n        return this.brickWidth;\r\n    }\r\n\r\n    get height() : number {\r\n        return this.brickHeight;\r\n    }\r\n\r\n    get pos() : Vector {\r\n        return this.position;\r\n    }\r\n\r\n    get energy() : number {\r\n        return this.brickEnergy;\r\n    }\r\n\r\n    get image() : HTMLImageElement {\r\n        return this.brickImage;\r\n    }\r\n\r\n\r\n    // Setters\r\n    set energy(energy : number) {\r\n        this.brickEnergy = energy;\r\n    }\r\n\r\n\r\n\r\n}","import {Brick} from './sprites/Brick';\r\nimport {\r\n    BRICK_IMAGES,\r\n    LEVEL,\r\n    STAGE_COLS,\r\n    STAGE_ROWS,\r\n    STAGE_PADDING,\r\n    BRICK_ENERGY,\r\n    BRICK_HEIGHT, \r\n    BRICK_WIDTH,\r\n    BRICK_PADDING\r\n} from './setup';\r\n\r\nexport function createBricks() : Brick[] {\r\n    return LEVEL.reduce((ack, element, i)=> {\r\n        const row = Math.floor(i + 1) /STAGE_COLS;\r\n        const col = i % STAGE_COLS;\r\n\r\n        const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\r\n        const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\r\n\r\n        if (element === 0) return ack;\r\n        \r\n        return [\r\n            ...ack,\r\n            new Brick (\r\n                BRICK_WIDTH,\r\n                BRICK_HEIGHT,\r\n                { x,y },\r\n                BRICK_ENERGY[element],\r\n                BRICK_IMAGES[element]\r\n            )\r\n        ];\r\n    }, [] as Brick[])  // 初始值\r\n}","import {CanvasView} from './view/CanvasView';\r\nimport {Ball} from './sprites/Ball';\r\nimport {Brick} from './sprites/Brick';\r\nimport {Paddle} from './sprites/Paddle';\r\nimport {Collison} from './Collison';\r\n// Images\r\nimport PADDLE_IMAGE from './images/paddle.png';\r\nimport BALL_IMAGE from './images/ball.png';\r\n// Level and Colors\r\nimport {\r\n    PADDLE_SPEED,\r\n    PADDLE_WIDTH,\r\n    PADDLE_HEIGHT,\r\n    PADDLE_STARTX,\r\n    BALL_SPEED,\r\n    BALL_SIZE,\r\n    BALL_STARTX,\r\n    BALL_STARTY\r\n} from './setup';\r\n// Helpers\r\nimport {createBricks} from './helpers';\r\n\r\nlet gameOver = false;\r\nlet score = 0;\r\n\r\nfunction setGameOver(view : CanvasView) {\r\n    view.drawInfo('Game Over !')\r\n    gameOver = false;\r\n}\r\n\r\nfunction setGameWin(view : CanvasView) {\r\n    view.drawInfo('Game Won !');\r\n    gameOver = false;\r\n}\r\n\r\nfunction gameLoop (\r\n    view : CanvasView, \r\n    bricks: Brick[], \r\n    paddle : Paddle, \r\n    ball : Ball,\r\n    collision : Collison\r\n    ) {\r\n\r\n        view.clear();\r\n        view.drawBricks(bricks);\r\n        view.drawSprite(paddle);\r\n        view.drawSprite(ball);\r\n\r\n        // Move Ball\r\n        ball.moveBall();\r\n\r\n        // move paddle so it won't exit the playfield\r\n        if (\r\n            (paddle.isMoveingLeft && paddle.pos.x > 0) ||\r\n            (paddle.isMoveingRight && paddle.pos.x < view.canvas.width - paddle.width)\r\n        ) {\r\n            paddle.movePaddle();\r\n        }\r\n\r\n        collision.checkBallCollison(ball, paddle, view);\r\n        const collidingBrick = collision.isCollidingBricks(ball, bricks);\r\n\r\n        if (collidingBrick) {\r\n            score += 1;\r\n            view.drawSocre(score);\r\n        }\r\n\r\n        // Game over when ball leaves playfield\r\n        if(ball.pos.y > view.canvas.height) gameOver = true;\r\n        // if game won, set gameOver and display win\r\n        if(bricks.length === 0) {\r\n            return setGameWin(view);\r\n        }\r\n        // return if gameOver and don't run the requestAnimationFrame\r\n        if (gameOver) return setGameOver(view);\r\n\r\n        requestAnimationFrame(() => gameLoop(view, bricks, paddle, ball, collision))\r\n}\r\n\r\nfunction startGame ( view : CanvasView) {\r\n    // Reset the display\r\n    score = 0;\r\n    view.drawInfo('');\r\n    view.drawSocre(0);\r\n    // Create a collasion instance\r\n    const collision = new Collison();\r\n    // Create all bricks\r\n    const bricks = createBricks();\r\n    // Create Paddle\r\n    const paddle = new Paddle(\r\n        PADDLE_SPEED,\r\n        PADDLE_WIDTH,\r\n        PADDLE_HEIGHT,\r\n        { \r\n            x : PADDLE_STARTX, \r\n            y : view.canvas.height - PADDLE_HEIGHT - 5\r\n        },\r\n        PADDLE_IMAGE\r\n    );\r\n    // Create a ball\r\n    const ball = new Ball(\r\n        BALL_SPEED,\r\n        BALL_SIZE,\r\n        { x : BALL_STARTX, y : BALL_STARTY},\r\n        BALL_IMAGE\r\n    );\r\n\r\n    gameLoop(view, bricks, paddle, ball, collision);\r\n}\r\n\r\n// Create a new view\r\nconst view = new CanvasView('#playField');\r\nview.initStartButton(startGame);\r\n"]}